_G.treasure = true
_G.blah = true
spawn(function()
    while task.wait() do
    if _G.blah then
    repeat
        local player = game.Players.LocalPlayer
        local backpack = player.Backpack
        
       
        local function toggleEquipTreasureMaps()
            while blah do
              
                for _, tool in pairs(backpack:GetChildren()) do
                    if tool.Name == "Treasure Map" then
                        
                        local equippedTool = player.Character:FindFirstChild(tool.Name)
                        
                        if equippedTool then
                           
                            equippedTool.Parent = backpack
                            print("Unequipped a Treasure Map!")
                        else
                           
                            tool.Parent = player.Character

print("Equipped a Treasure Map!")
                        end
                    end
                end
              
                wait(0.3)
            end
        end
        
       
        toggleEquipTreasureMaps()
        
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2824.41455078125, 214.32777404785156, 1517.94775390625)
        wait(2)
        while blah do
           
            local npc = workspace.world.npcs:FindFirstChild("Jack Marrow")
            
         
            if npc and npc:FindFirstChild("treasure") and npc.treasure:FindFirstChild("repairmap") then
             
                local success, errorMsg = pcall(function()
                    npc.treasure.repairmap:InvokeServer()
                end)


if not success then
                    print("Error invoking server:", errorMsg)
                end
            else
                print("NPC or treasure objects not found.")
            end
            
          
            wait(0.2)
        end
        
        wait(0.2)

    until not _G.blah
    end
    end
    end)

    spawn(function()
        while task.wait() do
        if _G.treasure then
        repeat
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local openTreasureEvent = ReplicatedStorage.events.open_treasure
    local chestsFolder = game.Workspace.world.chests
    
    
    local function openChestByName(chestName)

local x, y, z = chestName:match("TreasureChest_([%d%-.]+)_([%d%-.]+)_([%d%-.]+)")
        if x and y and z then
           
            local chestPosition = {
                ["y"] = tonumber(y), 
                ["x"] = tonumber(x), 
                ["z"] = tonumber(z)  
            }
            print("Sending request to open chest at:", chestPosition)
            openTreasureEvent:FireServer(chestPosition)
        else
            print("Failed to extract coordinates from:", chestName)
        end
    end
    
  
    for _, chest in pairs(chestsFolder:GetChildren()) do
        if chest.Name:match("TreasureChest_") then
            openChestByName(chest.Name)
        end
    end
    wait(0.2)
until not _G.treasure
end
end
end)
